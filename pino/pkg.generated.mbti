// Generated using `moon info`, DON'T EDIT IT
package "moonbitlang/maria/pino"

import(
  "moonbitlang/core/builtin"
  "moonbitlang/core/string"
)

// Values
fn logger(String, level? : Level, Transport) -> Logger

fn transport(@string.View) -> Transport raise

// Errors
pub suberror InvalidTransport @string.View
impl Show for InvalidTransport

// Types and methods
pub(all) enum Level {
  Trace
  Debug
  Info
  Warn
  Error
  Fatal
}

type Logger
fn Logger::child(Self, String) -> Self
fn Logger::close(Self) -> Unit
fn Logger::debug(Self, @string.View, Map[String, Json]) -> Unit
fn Logger::error(Self, @string.View, Map[String, Json]) -> Unit
fn Logger::info(Self, @string.View, Map[String, Json]) -> Unit
fn Logger::log(Self, Level, @string.View, Map[String, Json]) -> Unit
async fn Logger::start(Self) -> Unit
fn Logger::warn(Self, @string.View, Map[String, Json]) -> Unit

type Transport
fn Transport::console() -> Self
fn Transport::file(@string.View) -> Self

// Type aliases

// Traits

